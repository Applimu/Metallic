
def fun Int (fun Int Int) : gcd := fn Int: x do
	fn Int: y do
	match eq x 0
		case true do
			y
		case false do
	match eq y 0
		case true do
			x
		case false do
	match lt x y
		case true do
			gcd x (sub y x)
		case false do
			gcd (sub x y) y
	end
	end
	end


eval gcd 12 14
eval gcd 12 120
eval gcd 27 9
eval gcd 28 9

def fun Int (fun Int Bool): is_prime_helper := fn Int: p do fn Int: i do
	match eq p (mul i i)
		case true do false
		case false do
	match gt p (mul i i)
		case true do 
			match eq (gcd p i) 1
				case true do
					is_prime_helper p (add i 1)
				case false do
					false
			end
		case false do
			true
	end
	end

def fun Int Bool : is_prime := fn Int: p do is_prime_helper p 1
	

eval is_prime 211
